{"version":3,"sources":["components/Navbar.jsx","components/TextForm.jsx","components/Alert.jsx","App.js","index.js"],"names":["Navbar","props","className","mode","style","boxShadow","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","color","backgroundColor","myStyle","setmyStyle","buttonText","setButtonText","copyText","setCopyText","heading","borderRadius","rows","value","onChange","e","target","placeholder","newText","toUpperCase","showAlert","collapse","document","getElementById","classList","contains","remove","add","toLowerCase","toggle","mybox","navigator","clipboard","writeText","copy","setTimeout","border","split","join","length","Alert","alert","role","word","lower","charAt","slice","capital","msg","App","changeMode","setAlert","message","console","log","body","ReactDOM","render"],"mappings":"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","file":"static/js/main.73c105c1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    \r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} style={{boxShadow:' rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px'}}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand text-danger\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n                    <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\">\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href=\"/\">About</a>\r\n                        </li>\r\n                        \r\n                        \r\n                    </ul>\r\n                    <div className={`form-check form-switch me-5 text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" onClick={props.toggleMode}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\" >Dark Mode</label>\r\n                    </div>\r\n\r\n                   \r\n                    \r\n                    </div>\r\n                </div>\r\n          </nav>\r\n        </>\r\n    )\r\n}\r\n// export default Navbar;","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  function uppercaseFunc() {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\",\"success\");\r\n\r\n  }\r\n  const [myStyle, setmyStyle] = useState({\r\n    color: \"#212529\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  const [buttonText, setButtonText] = useState(\"Dark Mode\");\r\n  const [copyText, setCopyText] = useState(\"Copy\");\r\n  function lowercaseFunc() {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\",\"success\");\r\n  }\r\n  function changed(e) {\r\n    // console.log(\"textarea changed\");\r\n    setText(e.target.value);\r\n  }\r\n  function prevFunc() {\r\n    const collapse = document.getElementById(\"collapseOne\");\r\n    const contain = collapse.classList.contains(\"show\");\r\n    if (!contain) {\r\n      collapse.classList.add(\"show\");\r\n    } else {\r\n      collapse.classList.remove(\"show\");\r\n    }\r\n  }\r\n  function clearFunc() {\r\n    setText(\"\");\r\n    props.showAlert(\"TextBox Cleared\",\"success\");\r\n\r\n  }\r\n  function toggleMode() {\r\n    let toggle = document.getElementById(\"toggle\");\r\n    if (myStyle.color === \"#212529\") {\r\n      setmyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"#212529\",\r\n      });\r\n      toggle.classList.remove(\"btn-dark\");\r\n      toggle.classList.add(\"btn-light\");\r\n      setButtonText(\"Light Mode\");\r\n    } else {\r\n      setmyStyle({\r\n        color: \"#212529\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setButtonText(\"Dark Mode\");\r\n      toggle.classList.remove(\"btn-light\");\r\n      toggle.classList.add(\"btn-dark\");\r\n    }\r\n  }\r\n  function copyFunc() {\r\n    var mybox = document.getElementById(\"mybox\");\r\n    // mybox.select();\r\n    navigator.clipboard.writeText(mybox.value);\r\n    setCopyText(\"Copied\");\r\n    const copy = document.getElementById(\"copy\");\r\n    copy.classList.remove(\"btn-success\");\r\n    copy.classList.add(\"btn-secondary\");\r\n    setTimeout(() => {\r\n      setCopyText(\"Copy\");\r\n      copy.classList.remove(\"btn-secondary\");\r\n      copy.classList.add(\"btn-success\");\r\n    }, 3000);\r\n    props.showAlert(\"Text Copied\",\"success\");\r\n\r\n  }\r\n\r\n  function removeSpace() {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"All Extra Spaces Removed\",\"success\");\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <div className=\"mb-1 my-3\">\r\n          <h1>{props.heading}</h1>\r\n\r\n          <textarea\r\n            style={{\r\n              backgroundColor:\r\n                props.mode === \"dark\" ? \"rgb(0 0 0 / 50%)\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              boxShadow:\r\n                \"rgba(17, 17, 26, 0.05) 0px 4px 16px, rgba(17, 17, 26, 0.05) 0px 8px 32px\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n            className=\"form-control fs-4\"\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={changed}\r\n            placeholder=\"Do experiments with your text...\"\r\n          ></textarea>\r\n          <button className=\"btn btn-primary my-2\" onClick={uppercaseFunc}>\r\n            Uppercase\r\n          </button>\r\n          <button className=\"btn btn-warning my-2 mx-2\" onClick={prevFunc}>\r\n            Preview\r\n          </button>\r\n          <button className=\"btn btn-info my-2\" onClick={lowercaseFunc}>\r\n            Lowercase\r\n          </button>\r\n          <button className=\"btn btn-danger mx-2 my-2\" onClick={clearFunc}>\r\n            Clear\r\n          </button>\r\n          <button\r\n            className=\"btn btn-dark my-2\"\r\n            onClick={toggleMode}\r\n            id=\"toggle\"\r\n          >\r\n            {buttonText}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success mx-2 my-2\"\r\n            onClick={copyFunc}\r\n            id=\"copy\"\r\n          >\r\n            {copyText}\r\n          </button>\r\n          <button\r\n            className=\"btn  my-2\"\r\n            style={{\r\n              backgroundColor: \"#e44125\",\r\n              border: \"#e44125\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={removeSpace}\r\n          >\r\n            Remove Spaces\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container \"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p className=\"fs-5\">\r\n          <strong>{text.split(\" \").length - 1}</strong> words{\" \"}\r\n          <strong>{text.length}</strong> character\r\n        </p>\r\n        <p className=\"fs-5\">\r\n          <strong>{0.008 * (text.split(\" \").length - 1)}</strong> minutes to\r\n          read above paragraph\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          backgroundColor: props.mode === \"dark\" ? \"rgb(3 16 45)\" : \"white\",\r\n        }}\r\n      >\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\" style={myStyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button fs-4\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"dark\" ? \"rgb(3 2 12 / 93%)\" : \"white\",\r\n                  color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n                  boxShadow:\r\n                    \"rgba(17, 17, 26, 0.05) 0px 4px 16px, rgba(17, 17, 26, 0.05) 0px 8px 32px\"\r\n                }}\r\n              >\r\n                Preview of textarea\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse \"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n              style={{\r\n                backgroundColor:\r\n                  props.mode === \"dark\" ? \"rgb(85 112 135)\" : \"white\",\r\n                // color:\r\n                // props.mode === \"dark\" ? \"white\" : \"black\"\r\n              }}\r\n            >\r\n              <div className=\"accordion-body fs-5\">\r\n                {text.length > 0 ? text : \"Your textbox is empty\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capital = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n  return (\r\n    \r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capital(props.alert.type)}: {props.alert.msg} </strong>\r\n       \r\n      </div>\r\n    \r\n  );\r\n}\r\n","// import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [mode, changeMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert= (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 3500);\n  };\n  const toggleMode=()=> {\n    console.log('hi');\n    if (mode === 'light') {\n      changeMode('dark');\n      document.body.style.backgroundColor=\"rgb(3 16 45)\";\n      showAlert(\"Dark Mode enabled\",\"success\");\n      document.title=\"textTutils-Dark Mode\";\n      \n    } else {\n      changeMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light Mode enabled\",\"success\");\n      document.title=\"textTutils-light Mode\";\n\n      \n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"textTutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <TextForm heading=\"Enter your text\"  mode={mode} showAlert={showAlert}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}