{"version":3,"sources":["components/Navbar.jsx","components/TextForm.jsx","components/Alert.jsx","App.js","index.js"],"names":["Navbar","props","className","mode","style","boxShadow","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","color","backgroundColor","myStyle","copyText","setCopyText","heading","borderRadius","rows","value","onChange","e","target","placeholder","disabled","length","newText","toUpperCase","showAlert","collapse","document","getElementById","classList","contains","remove","add","toLowerCase","mybox","navigator","clipboard","writeText","window","getSelection","removeAllRanges","copy","setTimeout","border","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capital","msg","App","changeMode","setAlert","message","console","log","body","ReactDOM","render"],"mappings":"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","file":"static/js/main.30847524.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    \r\n    return (\r\n        <>\r\n            {/* <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} style={{boxShadow:' rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px'}}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand text-danger\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n                    <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\">\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href=\"/\">About</a>\r\n                        </li>\r\n                        \r\n                        \r\n                    </ul>\r\n                    <div className={`form-check form-switch me-5 text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" onClick={props.toggleMode}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\" >Dark Mode</label>\r\n                    </div>\r\n\r\n                   \r\n                    <form className=\"d-flex\">\r\n                     <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                     <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n          </nav> */}\r\n\r\n\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} style={{boxShadow:' rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px'}}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                    </li>\r\n                    \r\n                </ul>\r\n                <div className={`form-check form-switch me-5 text-${props.mode==='light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" onClick={props.toggleMode}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\" >Dark Mode</label>\r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n            </nav>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// export default Navbar;","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  function uppercaseFunc() {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\",\"success\");\r\n\r\n  }\r\n  const [myStyle, setmyStyle] = useState({\r\n    color: \"#212529\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  const [buttonText, setButtonText] = useState(\"Dark Mode\");\r\n  const [copyText, setCopyText] = useState(\"Copy\");\r\n  function lowercaseFunc() {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\",\"success\");\r\n  }\r\n  function changed(e) {\r\n    // console.log(\"textarea changed\");\r\n    setText(e.target.value);\r\n  }\r\n  function prevFunc() {\r\n    const collapse = document.getElementById(\"collapseOne\");\r\n    const contain = collapse.classList.contains(\"show\");\r\n    if (!contain) {\r\n      collapse.classList.add(\"show\");\r\n    } else {\r\n      collapse.classList.remove(\"show\");\r\n    }\r\n  }\r\n  function clearFunc() {\r\n    setText(\"\");\r\n    props.showAlert(\"TextBox Cleared\",\"success\");\r\n\r\n  }\r\n  function toggleMode() {\r\n    let toggle = document.getElementById(\"toggle\");\r\n    if (myStyle.color === \"#212529\") {\r\n      setmyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"#212529\",\r\n      });\r\n      toggle.classList.remove(\"btn-dark\");\r\n      toggle.classList.add(\"btn-light\");\r\n      setButtonText(\"Light Mode\");\r\n    } else {\r\n      setmyStyle({\r\n        color: \"#212529\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setButtonText(\"Dark Mode\");\r\n      toggle.classList.remove(\"btn-light\");\r\n      toggle.classList.add(\"btn-dark\");\r\n    }\r\n  }\r\n  function copyFunc() {\r\n    var mybox = document.getElementById(\"mybox\");\r\n    // mybox.select();\r\n    navigator.clipboard.writeText(mybox.value);\r\n    setCopyText(\"Copied\");\r\n    window.getSelection().removeAllRanges();\r\n    const copy = document.getElementById(\"copy\");\r\n    copy.classList.remove(\"btn-success\");\r\n    copy.classList.add(\"btn-secondary\");\r\n    setTimeout(() => {\r\n      setCopyText(\"Copy\");\r\n      copy.classList.remove(\"btn-secondary\");\r\n      copy.classList.add(\"btn-success\");\r\n    }, 3000);\r\n    props.showAlert(\"Text Copied\",\"success\");\r\n\r\n  }\r\n\r\n  function removeSpace() {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"All Extra Spaces Removed\",\"success\");\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <div className=\"mb-1 my-3\">\r\n          <h1>{props.heading}</h1>\r\n\r\n          <textarea\r\n            style={{\r\n              backgroundColor:\r\n                props.mode === \"dark\" ? \"rgb(0 0 0 / 50%)\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              boxShadow:\r\n                \"rgba(17, 17, 26, 0.05) 0px 4px 16px, rgba(17, 17, 26, 0.05) 0px 8px 32px\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n            className=\"form-control fs-4\"\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={changed}\r\n            placeholder=\"Do experiments with your text...\"\r\n          ></textarea>\r\n          <button disabled={text.length===0} className=\"btn btn-primary my-2\" onClick={uppercaseFunc}>\r\n            Uppercase\r\n          </button>\r\n          <button disabled={text.length===0} className=\"btn btn-warning my-2 mx-2\" onClick={prevFunc}>\r\n            Preview\r\n          </button>\r\n          <button disabled={text.length===0} className=\"btn btn-info my-2\" onClick={lowercaseFunc}>\r\n            Lowercase\r\n          </button>\r\n          <button disabled={text.length===0} className=\"btn btn-danger mx-2\" onClick={clearFunc}>\r\n            Clear\r\n          </button>\r\n          {/* <button\r\n            className=\"btn btn-dark my-2\"\r\n            onClick={toggleMode}\r\n            id=\"toggle\"\r\n          >\r\n            {buttonText}\r\n          </button> */}\r\n          <button disabled={text.length===0}\r\n            className=\"btn btn-success me-2 \"\r\n            onClick={copyFunc}\r\n            id=\"copy\"\r\n          >\r\n            {copyText}\r\n          </button>\r\n          <button\r\n            disabled={text.length===0}\r\n            className=\"btn  \"\r\n            style={{\r\n              backgroundColor: \"#e44125\",\r\n              border: \"#e44125\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={removeSpace}\r\n          >\r\n            Remove Spaces\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container \"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p className=\"fs-5\">\r\n          <strong>{text.split(\" \").filter((element)=>{return element.length!==0}).length }</strong> words{\" \"}\r\n          <strong>{text.length}</strong> character\r\n        </p>\r\n        <p className=\"fs-5\">\r\n          <strong>{0.008 * (text.split(\" \").filter((element)=>{return element.length!==0}).length )}</strong> minutes to\r\n          read above paragraph\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          backgroundColor: props.mode === \"dark\" ? \"rgb(3 16 45)\" : \"white\",\r\n        }}\r\n      >\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\" style={myStyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button fs-4\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={{\r\n                  backgroundColor:\r\n                    props.mode === \"dark\" ? \"#212529\" : \"white\",\r\n                  color: props.mode === \"dark\" ? \"white\" : \"#212529\",\r\n                  boxShadow:\r\n                    \"rgba(17, 17, 26, 0.05) 0px 4px 16px, rgba(17, 17, 26, 0.05) 0px 8px 32px\"\r\n                }}\r\n              >\r\n                Preview of textarea\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse \"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n              style={{\r\n                backgroundColor:\r\n                  props.mode === \"dark\" ? \"rgb(85 112 135)\" : \"white\",\r\n                // color:\r\n                // props.mode === \"dark\" ? \"white\" : \"black\"\r\n              }}\r\n            >\r\n              <div className=\"accordion-body fs-5\">\r\n                {text.length > 0 ? text : \"Your textbox is empty\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capital = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n  return (\r\n    \r\n      <div style={{height:\"40px\"}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capital(props.alert.type)}: {props.alert.msg} </strong>\r\n       \r\n      </div>}\r\n      </div>\r\n    \r\n  );\r\n}\r\n","// import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [mode, changeMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert= (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    \n    setTimeout(() => {\n      setAlert(null)\n    }, 3500);\n  };\n  const toggleMode=()=> {\n    console.log('hi');\n    if (mode === 'light') {\n      changeMode('dark');\n      document.body.style.backgroundColor=\"rgb(3 16 45)\";\n      showAlert(\"Dark Mode enabled\",\"success\");\n      document.title=\"textTutils-Dark Mode\";\n      \n    } else {\n      changeMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light Mode enabled\",\"success\");\n      document.title=\"textTutils-light Mode\";\n\n      \n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"textTutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <TextForm heading=\"Enter your text\"  mode={mode} showAlert={showAlert}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}